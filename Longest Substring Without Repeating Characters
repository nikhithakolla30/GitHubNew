import java.util.HashMap;
import java.util.Map;

class Solution {
    public int lengthOfLongestSubstring(String s) {
        int n = s.length();
        int maxLength = 0;
        Map<Character, Integer> charMap = new HashMap<>();

        for (int i = 0, j = 0; j < n; j++) {
            char c = s.charAt(j);
            if (charMap.containsKey(c)) {
                i = Math.max(charMap.get(c) + 1, i);
            }
            maxLength = Math.max(maxLength, j - i + 1);
            charMap.put(c, j);
        }

        return maxLength;
    }
}

public class Main {
    public static void main(String[] args) {
        Solution solution = new Solution();

        String s1 = "abcabcbb";
        System.out.println("Length of the longest substring without repeating characters: " +
                solution.lengthOfLongestSubstring(s1));

        String s2 = "bbbbb";
        System.out.println("Length of the longest substring without repeating characters: " +
                solution.lengthOfLongestSubstring(s2));

        String s3 = "pwwkew";
        System.out.println("Length of the longest substring without repeating characters: " +
                solution.lengthOfLongestSubstring(s3));
    }
}
