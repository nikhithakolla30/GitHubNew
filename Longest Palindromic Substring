class Solution {
    private int start, maxLength;

    public String longestPalindrome(String s) {
        int n = s.length();
        if (n < 2) {
            return s;
        }

        for (int i = 0; i < n - 1; i++) {
            extendPalindrome(s, i, i); 
            extendPalindrome(s, i, i + 1); 
        }

        return s.substring(start, start + maxLength);
    }

    private void extendPalindrome(String s, int left, int right) {
        while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
            left--;
            right++;
        }

        int currentLength = right - left - 1;
        if (currentLength > maxLength) {
            maxLength = currentLength;
            start = left + 1;
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Solution solution = new Solution();

        String s1 = "babad";
        System.out.println("Longest palindromic substring: " + solution.longestPalindrome(s1));

        String s2 = "cbbd";
        System.out.println("Longest palindromic substring: " + solution.longestPalindrome(s2));
    }
}
