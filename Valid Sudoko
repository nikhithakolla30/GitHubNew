import java.util.HashSet;

public class Solution {
    public static boolean isValidSudoku(char[][] board) {
        for (int i = 0; i < 9; i++) {
            HashSet<Character> set = new HashSet<>();
            for (int j = 0; j < 9; j++) {
                char digit = board[i][j];
                if (digit != '.') {
                    if (set.contains(digit)) {
                        return false;
                    }
                    set.add(digit);
                }
            }
        }

        for (int j = 0; j < 9; j++) {
            HashSet<Character> set = new HashSet<>();
            for (int i = 0; i < 9; i++) {
                char digit = board[i][j];
                if (digit != '.') {
                    if (set.contains(digit)) {
                        return false;
                    }
                    set.add(digit);
                }
            }
        }
        for (int block = 0; block < 9; block++) {
            HashSet<Character> set = new HashSet<>();
            int startRow = 3 * (block / 3);
            int startCol = 3 * (block % 3);
            for (int i = startRow; i < startRow + 3; i++) {
                for (int j = startCol; j < startCol + 3; j++) {
                    char digit = board[i][j];
                    if (digit != '.') {
                        if (set.contains(digit)) {
                            return false;
                        }
                        set.add(digit);
                    }
                }
            }
        }

        return true;
    }

    public static void main(String[] args) {
        char[][] board = {
            {'5', '3', '.', '.', '7', '.', '.', '.', '.'},
            {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
            {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
            {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
            {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
            {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
            {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
            {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
            {'.', '.', '.', '.', '8', '.', '.', '7', '9'}
        };

        boolean isValid = isValidSudoku(board);
        System.out.println("Is valid Sudoku board? " + isValid);
    }
}
